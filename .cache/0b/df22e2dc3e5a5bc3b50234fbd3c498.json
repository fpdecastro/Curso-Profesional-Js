{"id":"ejercicios/closures.html","dependencies":[{"name":"./","dynamic":true,"resolved":"/mnt/c/Users/paqui/desktop/primer semestre/Cursos en platzi/Curso Profesional de javascript/ejercicios","entry":true,"parent":"/mnt/c/Users/paqui/desktop/primer semestre/Cursos en platzi/Curso Profesional de javascript/ejercicios/closures.html"},{"name":"/mnt/c/Users/paqui/desktop/primer semestre/Cursos en platzi/Curso Profesional de javascript/package.json","includedInParent":true,"mtime":1597414772829}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Closures</title>\n</head>\n<body>\n    <a href=\"/6a77feb0a5503b43c564aa55c0534d7d.\">Go back</a>\n    <p><em>Abre la consola</em></p>\n    <script>//IIFE - Inmediately Invoked Function Expression\n(function () {\n  let color = 'green';\n  /*La función de abajo tiene alcance a lo que esta entre {}\n  Esto es un clousure*/\n\n  function printColor() {\n    console.log(color);\n  }\n\n  ;\n  printColor();\n})();\n/*Vamos a construir un pinter de colores*/\n\n\nfunction makeColorPrinter(color) {\n  let colorMessage = `This is de ${color}`;\n  return function () {\n    console.log(colorMessage);\n  };\n}\n/* Esto es un closure. Cuando yo ejecuto makeColorPrinter('green') Me devuelve una función la cual\nno es necesario mandarle ningún parámetro. Pero imprime una variable que esta en su alcance que es la\nde colorMessage*/\n\n/*Esto de los clousures nos permitirá realizar variables privadas*/\n\n\nlet greenColorPrinter = makeColorPrinter('green');\nconsole.log(greenColorPrinter()); //Variables privadas\n\nfunction MakeCounter(n) {\n  let count = n;\n  return {\n    /*Es una función que retorna un objeto con tres propiedades que tienen una función*/\n    increase: function () {\n      count += 1;\n    },\n    decrease: function () {\n      count -= 1;\n    },\n    getCount: function () {\n      return count;\n    }\n  };\n}\n\nlet counter = MakeCounter(3);\n/* Como vemos asi se puede crear una variable privada como es n\ny se puede modificar y extraer a traves de las propiedades de un objeto (que son funciones)\nSiempre counter va a variar los valores de count y se los va a acordar*/\n\nconsole.log('El numero que vamos es: ' + counter.getCount());\ncounter.increase();\ncounter.increase();\ncounter.increase();\ncounter.increase();\ncounter.increase();\nconsole.log('El numero que vamos es: ' + counter.getCount());\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\ncounter.decrease();\nconsole.log('El numero que vamos es: ' + counter.getCount());</script>\n    \n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"303bbce9e70fd649556ff7d5781da12b","cacheData":{"env":{}}}