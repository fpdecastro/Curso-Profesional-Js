{"id":"ejercicios/prototype.html","dependencies":[{"name":"./","dynamic":true,"resolved":"/mnt/c/Users/paqui/desktop/primer semestre/Cursos en platzi/Curso Profesional de javascript/ejercicios","entry":true,"parent":"/mnt/c/Users/paqui/desktop/primer semestre/Cursos en platzi/Curso Profesional de javascript/ejercicios/prototype.html"},{"name":"/mnt/c/Users/paqui/desktop/primer semestre/Cursos en platzi/Curso Profesional de javascript/package.json","includedInParent":true,"mtime":1597414772829}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Prototype</title>\n</head>\n<body>\n    <a href=\"/6a77feb0a5503b43c564aa55c0534d7d.\">Go Back</a>\n    <p><em>Abre la consola</em></p>\n    \n    <script>/*Muy ineficiente por cada uno tengo que crear un SuperHéroe*/\nconst zelda = {\n  name: 'zelda'\n};\n\nzelda.saludar = function () {\n  console.log(`Hola soy ${this.name}`);\n};\n\nzelda.saludar();\nconst Link = {\n  name: 'Link'\n};\n\nLink.saludar = function () {\n  console.log(`Hola soy ${this.name}`);\n};\n\nLink.saludar();\n/* Hagamos una función constructora*/\n\nfunction Hero(name) {\n  this.name = name;\n}\n\nHero.prototype.saludar = function () {\n  console.log(`Hola me llamo ${this.name}`);\n};\n/* Creamos un objeto y lo instanciamos para dos Heroes*/\n\n\nconst SuperMan = new Hero('Super Man');\nconst HombreArana = new Hero('Peter Parker');\nSuperMan.saludar();\nHombreArana.saludar();\n/* Tercera forma que es crear una función con métodos*/\n\nfunction Heroes(name) {\n  const hero = {\n    name: name\n  };\n\n  hero.saludar = function () {\n    console.log(`Bienvenidos a ${this.name}`);\n  };\n\n  return hero;\n}\n\n;\nconst batman = Heroes('Batman');\nbatman.saludar();\nconst linterna_verde = Heroes('Linterna Verde');\nlinterna_verde.saludar();\n/*Aun vamos a tratar de ser más eficientes creando otro método aparte*/\n\nconst HeroesMethods = {\n  saludar: function () {\n    console.log(`Me llamo ${this.name}`);\n  }\n};\n\nfunction Heroes1(name) {\n  const hero = {\n    name: name\n  };\n  hero.saludar = HeroesMethods.saludar;\n  return hero;\n}\n\n;\nconst batichica = Heroes('Batichica');\nbatichica.saludar();\nconst Pinocho = Heroes('Pinocho');\nPinocho.saludar();\n/* Ahora veremos que tambíen se puede utilizar un Objet.create\nel cual me permitirá hacer un nuevo objeto con todas las propiedas\ndel anterior\n-------------*----------------*-----------------*--------\nBasicamente lo que hace es copiar el objeto*/\n\nfunction Heroes2(name) {\n  const hero = Object.create(HeroesMethods);\n  hero.name = name;\n  return hero;\n}\n\nconst Roman = Heroes2('Roman');\nRoman.saludar();\nconst Jeniffer = Heroes2('Jeniffer');\nJeniffer.saludar();</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"d6d839f57ef0782b51b3159c64a7b1d1","cacheData":{"env":{}}}